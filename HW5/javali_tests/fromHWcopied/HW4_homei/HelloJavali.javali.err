Debug information for file: javali_tests/fromHWcopied/HW4_homei/HelloJavali.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: b, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: bt, type: boolean)
| | | VarDecl (name: bf, type: boolean)
| | | VarDecl (name: a, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: b)
| | | | IntConst (value: 300)
| | | Assign ()
| | | | Var (name: a)
| | | | IntConst (value: 200)
| | | Assign ()
| | | | Var (name: bt)
| | | | BooleanConst (value: true)
| | | Assign ()
| | | | Var (name: bf)
| | | | BooleanConst (value: false)
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | Var (name: a)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 666)
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | Var (name: a)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 666)
| | | IfElse ()
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | Var (name: a)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 666)
| | | IfElse ()
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | Var (name: a)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 666)
| | | BuiltInWriteln ()
| | | IfElse ()
| | | | BinaryOp (operator: B_AND)
| | | | | BooleanConst (value: false)
| | | | | BooleanConst (value: true)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | Var (name: a)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 666)
| | | BuiltInWriteln ()
| | | IfElse ()
| | | | BinaryOp (operator: B_OR)
| | | | | Var (name: bt)
| | | | | Var (name: bf)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 1)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 0)
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_TIMES)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_MINUS)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_MOD)
| | | | | IntConst (value: 13)
| | | | | IntConst (value: 7)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | BinaryOp (operator: B_DIV)
| | | | | IntConst (value: 17)
| | | | | IntConst (value: 7)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 3)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 3)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 3)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_OR_EQUAL)
| | | | | IntConst (value: 3)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_OR_EQUAL)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 3)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_GREATER_OR_EQUAL)
| | | | | IntConst (value: 4)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_AND)
| | | | | BooleanConst (value: true)
| | | | | BooleanConst (value: true)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_AND)
| | | | | BooleanConst (value: true)
| | | | | BooleanConst (value: false)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_AND)
| | | | | BooleanConst (value: false)
| | | | | BooleanConst (value: false)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_OR)
| | | | | BooleanConst (value: true)
| | | | | BooleanConst (value: true)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_OR)
| | | | | BooleanConst (value: true)
| | | | | BooleanConst (value: false)
| | | Assign ()
| | | | Var (name: bt)
| | | | BinaryOp (operator: B_OR)
| | | | | BooleanConst (value: false)
| | | | | BooleanConst (value: false)
| | | BuiltInWriteln ()
| | | IfElse ()
| | | | Var (name: bt)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 1)
| | | | Seq ()
| | | | | BuiltInWrite ()
| | | | | | IntConst (value: 0)

Test failed because an exception was thrown:
    definitions must have (local) variable on LHS
Stack trace:
java.lang.IllegalArgumentException: definitions must have (local) variable on LHS
	at cd.transform.analysis.ReachingDefsAnalysis$Def.<init>(ReachingDefsAnalysis.java:112)
	at cd.ir.ControlFlowGraph.generateGenKillDefSet(ControlFlowGraph.java:106)
	at cd.transform.analysis.ReachingDefsAnalysis.<init>(ReachingDefsAnalysis.java:38)
	at cd.util.debug.ReachingDefsDump.toString(ReachingDefsDump.java:32)
	at cd.AbstractTestAgainstFrozenReference.testReachingDefsAnalysis(AbstractTestAgainstFrozenReference.java:215)
	at cd.AbstractTestAgainstFrozenReference.test(AbstractTestAgainstFrozenReference.java:60)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)
