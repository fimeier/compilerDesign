ClassDecl (name: Random, superClass: Object)
| VarDecl (name: im, type: int)
| VarDecl (name: ia, type: int)
| VarDecl (name: ic, type: int)
| VarDecl (name: jran, type: int)
| MethodDecl (argumentNames: [seed], argumentTypes: [int], name: Random, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: im)
| | | | IntConst (value: 134456)
| | | Assign ()
| | | | Var (name: ia)
| | | | IntConst (value: 8121)
| | | Assign ()
| | | | Var (name: ic)
| | | | IntConst (value: 28411)
| | | Assign ()
| | | | Var (name: jran)
| | | | BinaryOp (operator: B_MOD)
| | | | | Var (name: seed)
| | | | | Var (name: im)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: next)
| | | | | ThisRef ()
| MethodDecl (argumentNames: [], argumentTypes: [], name: next, returnType: int)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: jran)
| | | | BinaryOp (operator: B_MOD)
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | BinaryOp (operator: B_TIMES)
| | | | | | | Var (name: jran)
| | | | | | | Var (name: ia)
| | | | | | Var (name: ic)
| | | | | Var (name: im)
| | | ReturnStmt ()
| | | | Var (name: jran)
ClassDecl (name: CmpLambda, superClass: Object)
| MethodDecl (argumentNames: [a, b], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: Less, superClass: CmpLambda)
| MethodDecl (argumentNames: [a, b], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | UnaryOp (operator: U_MINUS)
| | | | | | | IntConst (value: 1)
| | | | Nop ()
| | | IfElse ()
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | IntConst (value: 1)
| | | | Nop ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: Greater, superClass: CmpLambda)
| MethodDecl (argumentNames: [a, b], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | UnaryOp (operator: U_MINUS)
| | | | | | | IntConst (value: 1)
| | | | Nop ()
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: a)
| | | | | Var (name: b)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | IntConst (value: 1)
| | | | Nop ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: ActionLambda, superClass: Object)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: CountAction, superClass: ActionLambda)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 1)
ClassDecl (name: DepthAction, superClass: ActionLambda)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 1)
ClassDecl (name: PrintKeyAction, superClass: ActionLambda)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | BuiltInWrite ()
| | | | Var (name: key)
| | | BuiltInWriteln ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: PrintValueAction, superClass: ActionLambda)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | BuiltInWrite ()
| | | | Var (name: value)
| | | BuiltInWriteln ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: PrintBothAction, superClass: ActionLambda)
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | BuiltInWrite ()
| | | | Var (name: key)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | Var (name: value)
| | | BuiltInWriteln ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: ReductionLambda, superClass: Object)
| MethodDecl (argumentNames: [leftReturn, myReturn, rightReturn], argumentTypes: [int, int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: NothingReduction, superClass: ReductionLambda)
ClassDecl (name: CountReduction, superClass: ReductionLambda)
| MethodDecl (argumentNames: [leftReturn, myReturn, rightReturn], argumentTypes: [int, int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | Var (name: leftReturn)
| | | | | | Var (name: myReturn)
| | | | | Var (name: rightReturn)
ClassDecl (name: DepthReduction, superClass: ReductionLambda)
| MethodDecl (argumentNames: [leftReturn, myReturn, rightReturn], argumentTypes: [int, int, int], name: apply, returnType: int)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | Var (name: leftReturn)
| | | | | Var (name: rightReturn)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: leftReturn)
| | | | | | | Var (name: myReturn)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: rightReturn)
| | | | | | | Var (name: myReturn)
ClassDecl (name: Node, superClass: Object)
| VarDecl (name: cmpOp, type: CmpLambda)
| VarDecl (name: left, type: Node)
| VarDecl (name: right, type: Node)
| VarDecl (name: key, type: int)
| VarDecl (name: value, type: int)
| MethodDecl (argumentNames: [cmpOp, key, value], argumentTypes: [CmpLambda, int, int], name: Node, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Field (fieldName: cmpOp)
| | | | | ThisRef ()
| | | | Var (name: cmpOp)
| | | Assign ()
| | | | Var (name: left)
| | | | NullConst ()
| | | Assign ()
| | | | Var (name: right)
| | | | NullConst ()
| | | Assign ()
| | | | Field (fieldName: key)
| | | | | ThisRef ()
| | | | Var (name: key)
| | | Assign ()
| | | | Field (fieldName: value)
| | | | | ThisRef ()
| | | | Var (name: value)
| MethodDecl (argumentNames: [n], argumentTypes: [Node], name: add, returnType: void)
| | Seq ()
| | | VarDecl (name: cmp, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: cmp)
| | | | MethodCallExpr (methodName: compare)
| | | | | Var (name: n)
| | | | | ThisRef ()
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: cmp)
| | | | | IntConst (value: 0)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: value)
| | | | | | MethodCallExpr (methodName: getValue)
| | | | | | | Var (name: n)
| | | | | ReturnStmt ()
| | | | Nop ()
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: cmp)
| | | | | IntConst (value: 0)
| | | | Seq ()
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_EQUAL)
| | | | | | | Var (name: left)
| | | | | | | NullConst ()
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: left)
| | | | | | | | Var (name: n)
| | | | | | Seq ()
| | | | | | | MethodCall ()
| | | | | | | | MethodCallExpr (methodName: add)
| | | | | | | | | Var (name: left)
| | | | | | | | | Var (name: n)
| | | | Seq ()
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_EQUAL)
| | | | | | | Var (name: right)
| | | | | | | NullConst ()
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: right)
| | | | | | | | Var (name: n)
| | | | | | Seq ()
| | | | | | | MethodCall ()
| | | | | | | | MethodCallExpr (methodName: add)
| | | | | | | | | Var (name: right)
| | | | | | | | | Var (name: n)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getLeft, returnType: Node)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: left)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getRight, returnType: Node)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: right)
| MethodDecl (argumentNames: [other], argumentTypes: [Node], name: compare, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: cmpOp)
| | | | | Field (fieldName: key)
| | | | | | ThisRef ()
| | | | | MethodCallExpr (methodName: getKey)
| | | | | | Var (name: other)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getKey, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: key)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getValue, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: value)
| MethodDecl (argumentNames: [action, reduce], argumentTypes: [ActionLambda, ReductionLambda], name: runPreOrder, returnType: int)
| | Seq ()
| | | VarDecl (name: l, type: int)
| | | VarDecl (name: m, type: int)
| | | VarDecl (name: r, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: m)
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: action)
| | | | | Var (name: key)
| | | | | Var (name: value)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: left)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | MethodCallExpr (methodName: runPreOrder)
| | | | | | | Var (name: left)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | IntConst (value: 0)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: right)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | MethodCallExpr (methodName: runPreOrder)
| | | | | | | Var (name: right)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | IntConst (value: 0)
| | | ReturnStmt ()
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: reduce)
| | | | | Var (name: l)
| | | | | Var (name: m)
| | | | | Var (name: r)
| MethodDecl (argumentNames: [action, reduce], argumentTypes: [ActionLambda, ReductionLambda], name: runInOrder, returnType: int)
| | Seq ()
| | | VarDecl (name: l, type: int)
| | | VarDecl (name: m, type: int)
| | | VarDecl (name: r, type: int)
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: left)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | MethodCallExpr (methodName: runInOrder)
| | | | | | | Var (name: left)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | IntConst (value: 0)
| | | Assign ()
| | | | Var (name: m)
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: action)
| | | | | Var (name: key)
| | | | | Var (name: value)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: right)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | MethodCallExpr (methodName: runInOrder)
| | | | | | | Var (name: right)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | IntConst (value: 0)
| | | ReturnStmt ()
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: reduce)
| | | | | Var (name: l)
| | | | | Var (name: m)
| | | | | Var (name: r)
| MethodDecl (argumentNames: [action, reduce], argumentTypes: [ActionLambda, ReductionLambda], name: runPostOrder, returnType: int)
| | Seq ()
| | | VarDecl (name: l, type: int)
| | | VarDecl (name: m, type: int)
| | | VarDecl (name: r, type: int)
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: left)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | MethodCallExpr (methodName: runPreOrder)
| | | | | | | Var (name: left)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: l)
| | | | | | IntConst (value: 0)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: right)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | MethodCallExpr (methodName: runPreOrder)
| | | | | | | Var (name: right)
| | | | | | | Var (name: action)
| | | | | | | Var (name: reduce)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: r)
| | | | | | IntConst (value: 0)
| | | Assign ()
| | | | Var (name: m)
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: action)
| | | | | Var (name: key)
| | | | | Var (name: value)
| | | ReturnStmt ()
| | | | MethodCallExpr (methodName: apply)
| | | | | Var (name: reduce)
| | | | | Var (name: l)
| | | | | Var (name: m)
| | | | | Var (name: r)
ClassDecl (name: Tree, superClass: Object)
| VarDecl (name: cmpOp, type: CmpLambda)
| VarDecl (name: printKeyAction, type: ActionLambda)
| VarDecl (name: printValueAction, type: ActionLambda)
| VarDecl (name: printBothAction, type: ActionLambda)
| VarDecl (name: countAction, type: ActionLambda)
| VarDecl (name: depthAction, type: ActionLambda)
| VarDecl (name: printReduce, type: ReductionLambda)
| VarDecl (name: countReduce, type: ReductionLambda)
| VarDecl (name: depthReduce, type: ReductionLambda)
| VarDecl (name: root, type: Node)
| MethodDecl (argumentNames: [cmpOp], argumentTypes: [CmpLambda], name: Tree, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Field (fieldName: cmpOp)
| | | | | ThisRef ()
| | | | Var (name: cmpOp)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: preparePrintLambdas)
| | | | | ThisRef ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: prepareCountLambdas)
| | | | | ThisRef ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: prepareDepthLambdas)
| | | | | ThisRef ()
| MethodDecl (argumentNames: [key, value], argumentTypes: [int, int], name: add, returnType: void)
| | Seq ()
| | | VarDecl (name: n, type: Node)
| | Seq ()
| | | Assign ()
| | | | Var (name: n)
| | | | NewObject (typeName: Node)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: Node)
| | | | | Var (name: n)
| | | | | Var (name: cmpOp)
| | | | | Var (name: key)
| | | | | Var (name: value)
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: root)
| | | | | | Var (name: n)
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: add)
| | | | | | | Var (name: root)
| | | | | | | Var (name: n)
| MethodDecl (argumentNames: [], argumentTypes: [], name: prepareCountLambdas, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: countAction)
| | | | NewObject (typeName: CountAction)
| | | Assign ()
| | | | Var (name: countReduce)
| | | | NewObject (typeName: CountReduction)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getCount, returnType: int)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | MethodCallExpr (methodName: runPostOrder)
| | | | | | | Var (name: root)
| | | | | | | Var (name: countAction)
| | | | | | | Var (name: countReduce)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | IntConst (value: 0)
| MethodDecl (argumentNames: [], argumentTypes: [], name: prepareDepthLambdas, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: depthAction)
| | | | NewObject (typeName: DepthAction)
| | | Assign ()
| | | | Var (name: depthReduce)
| | | | NewObject (typeName: DepthReduction)
| MethodDecl (argumentNames: [], argumentTypes: [], name: getDepth, returnType: int)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | MethodCallExpr (methodName: runPostOrder)
| | | | | | | Var (name: root)
| | | | | | | Var (name: depthAction)
| | | | | | | Var (name: depthReduce)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | IntConst (value: 0)
| MethodDecl (argumentNames: [], argumentTypes: [], name: preparePrintLambdas, returnType: void)
| | Seq ()
| | Seq ()
| | | Assign ()
| | | | Var (name: printKeyAction)
| | | | NewObject (typeName: PrintKeyAction)
| | | Assign ()
| | | | Var (name: printValueAction)
| | | | NewObject (typeName: PrintValueAction)
| | | Assign ()
| | | | Var (name: printBothAction)
| | | | NewObject (typeName: PrintBothAction)
| | | Assign ()
| | | | Var (name: printReduce)
| | | | NewObject (typeName: NothingReduction)
| MethodDecl (argumentNames: [type], argumentTypes: [int], name: printPreOrder, returnType: void)
| | Seq ()
| | | VarDecl (name: action, type: ActionLambda)
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: type)
| | | | | IntConst (value: 1)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: action)
| | | | | | Var (name: printKeyAction)
| | | | Seq ()
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_EQUAL)
| | | | | | | Var (name: type)
| | | | | | | IntConst (value: 2)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printValueAction)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printBothAction)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: runPreOrder)
| | | | | | | Var (name: root)
| | | | | | | Var (name: action)
| | | | | | | Var (name: printReduce)
| | | | Nop ()
| MethodDecl (argumentNames: [type], argumentTypes: [int], name: printInOrder, returnType: void)
| | Seq ()
| | | VarDecl (name: action, type: ActionLambda)
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: type)
| | | | | IntConst (value: 1)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: action)
| | | | | | Var (name: printKeyAction)
| | | | Seq ()
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_EQUAL)
| | | | | | | Var (name: type)
| | | | | | | IntConst (value: 2)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printValueAction)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printBothAction)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: runInOrder)
| | | | | | | Var (name: root)
| | | | | | | Var (name: action)
| | | | | | | Var (name: printReduce)
| | | | Nop ()
| MethodDecl (argumentNames: [type], argumentTypes: [int], name: printPostOrder, returnType: void)
| | Seq ()
| | | VarDecl (name: action, type: ActionLambda)
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: type)
| | | | | IntConst (value: 1)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: action)
| | | | | | Var (name: printKeyAction)
| | | | Seq ()
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_EQUAL)
| | | | | | | Var (name: type)
| | | | | | | IntConst (value: 2)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printValueAction)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: action)
| | | | | | | | Var (name: printBothAction)
| | | IfElse ()
| | | | BinaryOp (operator: B_NOT_EQUAL)
| | | | | Var (name: root)
| | | | | NullConst ()
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: runPostOrder)
| | | | | | | Var (name: root)
| | | | | | | Var (name: action)
| | | | | | | Var (name: printReduce)
| | | | Nop ()
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: r, type: Random)
| VarDecl (name: t1, type: Tree)
| VarDecl (name: t2, type: Tree)
| MethodDecl (argumentNames: [], argumentTypes: [], name: init, returnType: void)
| | Seq ()
| | | VarDecl (name: cmpOp, type: CmpLambda)
| | Seq ()
| | | Assign ()
| | | | Var (name: r)
| | | | NewObject (typeName: Random)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: Random)
| | | | | Var (name: r)
| | | | | IntConst (value: 42)
| | | Assign ()
| | | | Var (name: cmpOp)
| | | | NewObject (typeName: Less)
| | | Assign ()
| | | | Var (name: t1)
| | | | NewObject (typeName: Tree)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: Tree)
| | | | | Var (name: t1)
| | | | | Var (name: cmpOp)
| | | Assign ()
| | | | Var (name: cmpOp)
| | | | NewObject (typeName: Greater)
| | | Assign ()
| | | | Var (name: t2)
| | | | NewObject (typeName: Tree)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: Tree)
| | | | | Var (name: t2)
| | | | | Var (name: cmpOp)
| MethodDecl (argumentNames: [t, n], argumentTypes: [Tree, int], name: fill, returnType: void)
| | Seq ()
| | | VarDecl (name: i, type: int)
| | | VarDecl (name: key, type: int)
| | | VarDecl (name: value, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: i)
| | | | IntConst (value: 0)
| | | WhileLoop ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: i)
| | | | | Var (name: n)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Var (name: key)
| | | | | | MethodCallExpr (methodName: next)
| | | | | | | Var (name: r)
| | | | | Assign ()
| | | | | | Var (name: value)
| | | | | | Var (name: key)
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: add)
| | | | | | | Var (name: t)
| | | | | | | Var (name: key)
| | | | | | | Var (name: value)
| | | | | Assign ()
| | | | | | Var (name: i)
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: i)
| | | | | | | IntConst (value: 1)
| MethodDecl (argumentNames: [t], argumentTypes: [Tree], name: print, returnType: void)
| | Seq ()
| | Seq ()
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: getCount)
| | | | | Var (name: t)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: getDepth)
| | | | | Var (name: t)
| | | BuiltInWriteln ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: printInOrder)
| | | | | Var (name: t)
| | | | | IntConst (value: 1)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | Seq ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: init)
| | | | | ThisRef ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: fill)
| | | | | ThisRef ()
| | | | | Var (name: t1)
| | | | | IntConst (value: 100)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: fill)
| | | | | ThisRef ()
| | | | | Var (name: t2)
| | | | | IntConst (value: 100)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: print)
| | | | | ThisRef ()
| | | | | Var (name: t1)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: print)
| | | | | ThisRef ()
| | | | | Var (name: t2)
