Debug information for file: javali_tests/not ours/tests/ReturnPaths1.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | Seq ()
| | | Assign ()
| | | | Var (name: a)
| | | | MethodCallExpr (methodName: foo)
| | | | | Var (name: b)
| | | | | Var (name: a)
| | | | | Var (name: b)
ClassDecl (name: A, superClass: Object)
| MethodDecl (argumentNames: [arg1, arg2], argumentTypes: [A, A], name: foo, returnType: A)
| | Seq ()
| | Seq ()
| | | IfElse ()
| | | | BinaryOp (operator: B_EQUAL)
| | | | | Var (name: arg1)
| | | | | Var (name: arg2)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | Var (name: arg1)
| | | | Seq ()
| | | | | ReturnStmt ()
| | | | | | Var (name: arg2)
ClassDecl (name: B, superClass: A)

Phase cfg failed because we expected to see:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0|a = b.foo(...)"
    ];
    M0_BB0 -> M0_BB1;
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
  subgraph cluster_1 {
    label = "A.foo"
    M1_BB0 [
      shape="record"
      label="BB0|If: (arg1 == arg2)"
    ];
    M1_BB0 -> M1_BB2;
    M1_BB0 -> M1_BB3 [label="False"];
    M1_BB1 [
      shape="record"
      label="BB1"
    ];
    M1_BB2 [
      shape="record"
      label="BB2|return arg1"
    ];
    M1_BB2 -> M1_BB1;
    M1_BB3 [
      shape="record"
      label="BB3|return arg2"
    ];
    M1_BB3 -> M1_BB1;
  }
}

But we actually saw:
digraph G {
  graph [ rankdir = "LR" ];
  subgraph cluster_0 {
    label = "Main.main"
    M0_BB0 [
      shape="record"
      label="BB0|a = b.foo(...)"
    ];
    M0_BB0 -> M0_BB1;
    M0_BB1 [
      shape="record"
      label="BB1"
    ];
  }
  subgraph cluster_1 {
    label = "A.foo"
    M1_BB0 [
      shape="record"
      label="BB0|If: (arg1 == arg2)"
    ];
    M1_BB0 -> M1_BB2;
    M1_BB0 -> M1_BB3 [label="False"];
    M1_BB1 [
      shape="record"
      label="BB1"
    ];
    M1_BB2 [
      shape="record"
      label="BB2|return arg1"
    ];
    M1_BB2 -> M1_BB1;
    M1_BB3 [
      shape="record"
      label="BB3|return arg2"
    ];
    M1_BB3 -> M1_BB1;
    M1_BB4 [
      shape="record"
      label="BB4"
    ];
    M1_BB4 -> M1_BB1;
  }
}

The difference is:
At line  37 /  37:
>     M1_BB4 [
>       shape="record"
>       label="BB4"
>     ];
>     M1_BB4 -> M1_BB1;
Line  39 /  44:

