Debug information for file: javali_tests/othertests/A4_team/newObject.javali
AST Resulting From Parsing Stage:
ClassDecl (name: A, superClass: Object)
| VarDecl (name: k, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: foo, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 0)
ClassDecl (name: B, superClass: A)
| VarDecl (name: j, type: int)
| MethodDecl (argumentNames: [i], argumentTypes: [int], name: boo, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | Var (name: i)
| MethodDecl (argumentNames: [], argumentTypes: [], name: foo, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 1)
ClassDecl (name: C, superClass: B)
| VarDecl (name: h, type: int)
| MethodDecl (argumentNames: [i], argumentTypes: [int], name: boo, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | BinaryOp (operator: B_PLUS)
| | | | | Var (name: i)
| | | | | IntConst (value: 1)
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: k, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: a, type: A)
| | | VarDecl (name: b, type: B)
| | | VarDecl (name: arr, type: A[])
| | Seq ()
| | | Assign ()
| | | | Var (name: arr)
| | | | NewArray (typeName: A[])
| | | | | IntConst (value: 1)
| | | Assign ()
| | | | Index ()
| | | | | Var (name: arr)
| | | | | IntConst (value: 0)
| | | | NewObject (typeName: A)
| | | Assign ()
| | | | Field (fieldName: k)
| | | | | Index ()
| | | | | | Var (name: arr)
| | | | | | IntConst (value: 0)
| | | | IntConst (value: 5)
| | | BuiltInWrite ()
| | | | Field (fieldName: k)
| | | | | Index ()
| | | | | | Var (name: arr)
| | | | | | IntConst (value: 0)
| | | Assign ()
| | | | Var (name: k)
| | | | IntConst (value: 5)
| | | Assign ()
| | | | Var (name: a)
| | | | NewObject (typeName: A)
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: foo)
| | | | | Var (name: a)
| | | BuiltInWriteln ()
| | | Assign ()
| | | | Var (name: b)
| | | | NewObject (typeName: B)
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: foo)
| | | | | Var (name: b)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | Var (name: k)
| | | BuiltInWriteln ()
| | | BuiltInWrite ()
| | | | MethodCallExpr (methodName: boo)
| | | | | Var (name: b)
| | | | | Var (name: k)
Error message: TYPE_ERROR

Phase semantic failed because we expected to see:
OK
But we actually saw:
TYPE_ERROR
The difference is:
At line   1 /   1:
< OK
> TYPE_ERROR

