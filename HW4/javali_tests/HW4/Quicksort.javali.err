Debug information for file: javali_tests/HW4/Quicksort.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Record, superClass: Object)
| VarDecl (name: a, type: int)
| MethodDecl (argumentNames: [], argumentTypes: [], name: print, returnType: void)
| | Seq ()
| | Seq ()
| | | BuiltInWrite ()
| | | | Var (name: a)
| | | BuiltInWriteln ()
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: a, type: Record[])
| VarDecl (name: i, type: int)
| MethodDecl (argumentNames: [r1, r2], argumentTypes: [Record, Record], name: swap, returnType: void)
| | Seq ()
| | | VarDecl (name: temp, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: temp)
| | | | Field (fieldName: a)
| | | | | Var (name: r1)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Var (name: r1)
| | | | Field (fieldName: a)
| | | | | Var (name: r2)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Var (name: r2)
| | | | Var (name: temp)
| MethodDecl (argumentNames: [left, right], argumentTypes: [int, int], name: sort, returnType: void)
| | Seq ()
| | | VarDecl (name: i, type: int)
| | | VarDecl (name: j, type: int)
| | | VarDecl (name: m, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: m)
| | | | BinaryOp (operator: B_DIV)
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | Field (fieldName: a)
| | | | | | | Index ()
| | | | | | | | Var (name: a)
| | | | | | | | Var (name: left)
| | | | | | Field (fieldName: a)
| | | | | | | Index ()
| | | | | | | | Var (name: a)
| | | | | | | | Var (name: right)
| | | | | IntConst (value: 2)
| | | Assign ()
| | | | Var (name: i)
| | | | Var (name: left)
| | | Assign ()
| | | | Var (name: j)
| | | | Var (name: right)
| | | WhileLoop ()
| | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | Var (name: i)
| | | | | Var (name: j)
| | | | Seq ()
| | | | | WhileLoop ()
| | | | | | BinaryOp (operator: B_LESS_THAN)
| | | | | | | Field (fieldName: a)
| | | | | | | | Index ()
| | | | | | | | | Var (name: a)
| | | | | | | | | Var (name: i)
| | | | | | | Var (name: m)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: i)
| | | | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | | | Var (name: i)
| | | | | | | | | IntConst (value: 1)
| | | | | WhileLoop ()
| | | | | | BinaryOp (operator: B_GREATER_THAN)
| | | | | | | Field (fieldName: a)
| | | | | | | | Index ()
| | | | | | | | | Var (name: a)
| | | | | | | | | Var (name: j)
| | | | | | | Var (name: m)
| | | | | | Seq ()
| | | | | | | Assign ()
| | | | | | | | Var (name: j)
| | | | | | | | BinaryOp (operator: B_MINUS)
| | | | | | | | | Var (name: j)
| | | | | | | | | IntConst (value: 1)
| | | | | IfElse ()
| | | | | | BinaryOp (operator: B_LESS_OR_EQUAL)
| | | | | | | Var (name: i)
| | | | | | | Var (name: j)
| | | | | | Seq ()
| | | | | | | MethodCall ()
| | | | | | | | MethodCallExpr (methodName: swap)
| | | | | | | | | ThisRef ()
| | | | | | | | | Index ()
| | | | | | | | | | Var (name: a)
| | | | | | | | | | Var (name: i)
| | | | | | | | | Index ()
| | | | | | | | | | Var (name: a)
| | | | | | | | | | Var (name: j)
| | | | | | | Assign ()
| | | | | | | | Var (name: i)
| | | | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | | | Var (name: i)
| | | | | | | | | IntConst (value: 1)
| | | | | | | Assign ()
| | | | | | | | Var (name: j)
| | | | | | | | BinaryOp (operator: B_MINUS)
| | | | | | | | | Var (name: j)
| | | | | | | | | IntConst (value: 1)
| | | | | | Nop ()
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: left)
| | | | | Var (name: j)
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: sort)
| | | | | | | ThisRef ()
| | | | | | | Var (name: left)
| | | | | | | Var (name: j)
| | | | Nop ()
| | | IfElse ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: i)
| | | | | Var (name: right)
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: sort)
| | | | | | | ThisRef ()
| | | | | | | Var (name: i)
| | | | | | | Var (name: right)
| | | | Nop ()
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: SIZE, type: int)
| | | VarDecl (name: j, type: int)
| | Seq ()
| | | Assign ()
| | | | Var (name: SIZE)
| | | | IntConst (value: 5)
| | | Assign ()
| | | | Var (name: a)
| | | | NewArray (typeName: Record[])
| | | | | Var (name: SIZE)
| | | Assign ()
| | | | Var (name: j)
| | | | IntConst (value: 0)
| | | WhileLoop ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: j)
| | | | | Var (name: SIZE)
| | | | Seq ()
| | | | | Assign ()
| | | | | | Index ()
| | | | | | | Var (name: a)
| | | | | | | Var (name: j)
| | | | | | NewObject (typeName: Record)
| | | | | Assign ()
| | | | | | Var (name: j)
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: j)
| | | | | | | IntConst (value: 1)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Index ()
| | | | | | Var (name: a)
| | | | | | IntConst (value: 0)
| | | | IntConst (value: 5)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Index ()
| | | | | | Var (name: a)
| | | | | | IntConst (value: 1)
| | | | IntConst (value: 3)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Index ()
| | | | | | Var (name: a)
| | | | | | IntConst (value: 2)
| | | | IntConst (value: 1)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Index ()
| | | | | | Var (name: a)
| | | | | | IntConst (value: 3)
| | | | IntConst (value: 4)
| | | Assign ()
| | | | Field (fieldName: a)
| | | | | Index ()
| | | | | | Var (name: a)
| | | | | | IntConst (value: 4)
| | | | IntConst (value: 2)
| | | Assign ()
| | | | Var (name: j)
| | | | IntConst (value: 0)
| | | WhileLoop ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: j)
| | | | | Var (name: SIZE)
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: print)
| | | | | | | Index ()
| | | | | | | | Var (name: a)
| | | | | | | | Var (name: j)
| | | | | Assign ()
| | | | | | Var (name: j)
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: j)
| | | | | | | IntConst (value: 1)
| | | BuiltInWriteln ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: sort)
| | | | | ThisRef ()
| | | | | IntConst (value: 0)
| | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: j)
| | | | IntConst (value: 0)
| | | WhileLoop ()
| | | | BinaryOp (operator: B_LESS_THAN)
| | | | | Var (name: j)
| | | | | Var (name: SIZE)
| | | | Seq ()
| | | | | MethodCall ()
| | | | | | MethodCallExpr (methodName: print)
| | | | | | | Index ()
| | | | | | | | Var (name: a)
| | | | | | | | Var (name: j)
| | | | | Assign ()
| | | | | | Var (name: j)
| | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | Var (name: j)
| | | | | | | IntConst (value: 1)
| | | BuiltInWriteln ()
Binary Op: ((a[left].a + a[right].a))@464a0f47 (%esi,%edi)
Binary Op: (((a[left].a + a[right].a) / 2))@65f89f6d (%esi,%edi)
Binary Op: ((i <= j))@3c1409ff (%edi,%esi)
Binary Op: ((a[i].a < m))@75e055c4 (%edi,%esi)
Binary Op: ((i + 1))@78fceb91 (%esi,%edi)
Binary Op: ((a[j].a > m))@4b9e3779 (%esi,%edi)
Binary Op: ((j - 1))@c5e941a (%edi,%esi)
Binary Op: ((i <= j))@6ab876ae (%esi,%edi)
Binary Op: ((i + 1))@24f84bc6 (%ecx,%edx)
Binary Op: ((j - 1))@1b2a5c38 (%edx,%ecx)
Binary Op: ((left < j))@2738f484 (%ecx,%edx)
Binary Op: ((i < right))@2420da45 (%eax,%ebx)
Binary Op: ((j < SIZE))@4a131a09 (%eax,%esi)
Binary Op: ((j + 1))@2f253d2d (%esi,%eax)
Binary Op: ((j < SIZE))@1ec360c3 (%eax,%esi)
Binary Op: ((j + 1))@db53026 (%ecx,%edx)
Binary Op: ((j < SIZE))@569eb1f2 (%esi,%eax)
Binary Op: ((j + 1))@4c718b5f (%ecx,%edx)

Phase exec failed because we expected to see:
5
3
1
4
2

1
2
3
4
5


But we actually saw:
Error: 139

The difference is:
At line   1 /   1:
< 5
< 3
< 1
< 4
< 2
< 
< 1
< 2
< 3
< 4
< 5
> Error: 139

