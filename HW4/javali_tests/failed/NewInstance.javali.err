Debug information for file: javali_tests/failed/NewInstance.javali
AST Resulting From Parsing Stage:
ClassDecl (name: Main, superClass: Object)
| VarDecl (name: arr, type: A[])
| MethodDecl (argumentNames: [], argumentTypes: [], name: k, returnType: int)
| | Seq ()
| | Seq ()
| | | ReturnStmt ()
| | | | IntConst (value: 5)
| MethodDecl (argumentNames: [], argumentTypes: [], name: main, returnType: void)
| | Seq ()
| | | VarDecl (name: ab, type: A)
| | Seq ()
| | | MethodCall ()
| | | | MethodCallExpr (methodName: k)
| | | | | ThisRef ()
| | | Assign ()
| | | | Var (name: ab)
| | | | NewObject (typeName: A)
| | | Assign ()
| | | | Var (name: arr)
| | | | NewArray (typeName: A[])
| | | | | IntConst (value: 15)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: k)
| | | | | ThisRef ()
| | | Assign ()
| | | | Var (name: ab)
| | | | Index ()
| | | | | Field (fieldName: arr)
| | | | | | ThisRef ()
| | | | | IntConst (value: 4)
| | | MethodCall ()
| | | | MethodCallExpr (methodName: m)
| | | | | Index ()
| | | | | | Field (fieldName: aga)
| | | | | | | Index ()
| | | | | | | | Var (name: arr)
| | | | | | | | UnaryOp (operator: U_PLUS)
| | | | | | | | | BinaryOp (operator: B_PLUS)
| | | | | | | | | | BinaryOp (operator: B_TIMES)
| | | | | | | | | | | IntConst (value: 5)
| | | | | | | | | | | IntConst (value: 3)
| | | | | | | | | | IntConst (value: 2)
| | | | | | IntConst (value: 1)
| | | Assign ()
| | | | Index ()
| | | | | Field (fieldName: k)
| | | | | | Field (fieldName: aba)
| | | | | | | Index ()
| | | | | | | | Field (fieldName: aga)
| | | | | | | | | MethodCallExpr (methodName: m)
| | | | | | | | | | Index ()
| | | | | | | | | | | Field (fieldName: aga)
| | | | | | | | | | | | Index ()
| | | | | | | | | | | | | Field (fieldName: arr)
| | | | | | | | | | | | | | ThisRef ()
| | | | | | | | | | | | | IntConst (value: 4)
| | | | | | | | | | | IntConst (value: 0)
| | | | | | | | IntConst (value: 2)
| | | | | Index ()
| | | | | | Field (fieldName: k)
| | | | | | | Field (fieldName: aba)
| | | | | | | | Index ()
| | | | | | | | | Field (fieldName: arr)
| | | | | | | | | | ThisRef ()
| | | | | | | | | IntConst (value: 3)
| | | | | | IntConst (value: 3)
| | | | Index ()
| | | | | Field (fieldName: k)
| | | | | | Field (fieldName: aba)
| | | | | | | MethodCallExpr (methodName: m)
| | | | | | | | Index ()
| | | | | | | | | Var (name: arr)
| | | | | | | | | IntConst (value: 3)
| | | | | IntConst (value: 7)
ClassDecl (name: A, superClass: Object)
| VarDecl (name: k, type: int[])
| VarDecl (name: aga, type: A[])
| VarDecl (name: aba, type: A)
| MethodDecl (argumentNames: [], argumentTypes: [], name: m, returnType: A)
| | Seq ()
| | | VarDecl (name: ret, type: A)
| | Seq ()
| | | Assign ()
| | | | Field (fieldName: aga)
| | | | | ThisRef ()
| | | | NewArray (typeName: A[])
| | | | | IntConst (value: 50)
| | | Assign ()
| | | | Field (fieldName: k)
| | | | | ThisRef ()
| | | | NewArray (typeName: int[])
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | IntConst (value: 4)
| | | | | | IntConst (value: 5)
| | | Assign ()
| | | | Var (name: k)
| | | | NewArray (typeName: int[])
| | | | | BinaryOp (operator: B_PLUS)
| | | | | | Index ()
| | | | | | | Field (fieldName: k)
| | | | | | | | MethodCallExpr (methodName: m)
| | | | | | | | | Index ()
| | | | | | | | | | Var (name: aga)
| | | | | | | | | | IntConst (value: 7)
| | | | | | | IntConst (value: 4)
| | | | | | IntConst (value: 4)
| | | Assign ()
| | | | Var (name: ret)
| | | | NewObject (typeName: A)
| | | ReturnStmt ()
| | | | Var (name: ret)

Test failed because an exception was thrown:
    null
Stack trace:
java.lang.AssertionError
	at cd.backend.codegen.RegisterManager.releaseRegister(RegisterManager.java:126)
	at cd.backend.codegen.StackFrame.releaseRegister(StackFrame.java:220)
	at cd.backend.codegen.ExprGenerator.methodCall(ExprGenerator.java:677)
	at cd.backend.codegen.StmtGenerator.methodCall(StmtGenerator.java:104)
	at cd.backend.codegen.StmtGenerator.methodCall(StmtGenerator.java:1)
	at cd.ir.Ast$MethodCall.accept(Ast.java:602)
	at cd.ir.AstVisitor.visit(AstVisitor.java:16)
	at cd.ir.AstVisitor.visitChildren(AstVisitor.java:28)
	at cd.ir.AstVisitor.dflt(AstVisitor.java:37)
	at cd.ir.AstVisitor.seq(AstVisitor.java:100)
	at cd.ir.Ast$Seq.accept(Ast.java:677)
	at cd.ir.AstVisitor.visit(AstVisitor.java:16)
	at cd.backend.codegen.StmtGenerator.methodDecl(StmtGenerator.java:137)
	at cd.backend.codegen.StmtGenerator.methodDecl(StmtGenerator.java:1)
	at cd.ir.Ast$MethodDecl.accept(Ast.java:720)
	at cd.ir.AstVisitor.visit(AstVisitor.java:16)
	at cd.ir.AstVisitor.visitChildren(AstVisitor.java:28)
	at cd.backend.codegen.StmtGenerator.classDecl(StmtGenerator.java:119)
	at cd.backend.codegen.StmtGenerator.classDecl(StmtGenerator.java:1)
	at cd.ir.Ast$ClassDecl.accept(Ast.java:755)
	at cd.ir.AstVisitor.visit(AstVisitor.java:16)
	at cd.backend.codegen.StmtGenerator.gen(StmtGenerator.java:46)
	at cd.backend.codegen.AstCodeGenerator.go(AstCodeGenerator.java:154)
	at cd.Main.generateCode(Main.java:127)
	at cd.test.AbstractTestAgainstFrozenReference.testCodeGenerator(AbstractTestAgainstFrozenReference.java:204)
	at cd.test.AbstractTestAgainstFrozenReference.test(AbstractTestAgainstFrozenReference.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)
